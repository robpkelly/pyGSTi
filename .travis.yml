dist: xenial
language: python

python: 3.7

branches:
  only:
    - master
    - beta
    - develop
    - ci-fixes

# Hold off testing feature & bugfix branches in case this competes w/other testing.
#    - /^feature-.*$/
#    - /^bugfix-.*$/

env:
  global:
    - NOSEOPTS_DEFAULT="-v --with-timer --with-id --rednose"
    - NOSEOPTS_PARALLEL="--processes=-1 --process-timeout=2400" # timeout after 40 minutes (travis job timeout is 50 minutes)
    - NOSEOPTS_ALL="$NOSEOPTS_DEFAULT $NOSEOPTS_PARALLEL"
  matrix:
    - NOSETESTS="drivers objects" NOSEOPTS=$NOSEOPTS_ALL # first in build mx because long duration
    - NOSETESTS="algorithms" NOSEOPTS=$NOSEOPTS_ALL
    - NOSETESTS="algorithmsb" NOSEOPTS=$NOSEOPTS_ALL
    - NOSETESTS="tools iotest optimize construction extras" NOSEOPTS=$NOSEOPTS_ALL
    - NOSETESTS="report" NOSEOPTS=$NOSEOPTS_ALL
    - NOSETESTS="reportb" NOSEOPTS=$NOSEOPTS_ALL
    - NOSETESTS="mpi" NOSEOPTS=$NOSEOPTS_DEFAULT # cannot be run in parallel

# Install native package dependencies & initialize build environment
before_install:
  - >
    sudo apt-get update -qq -y &&
    sudo apt-get install -qq -y
    gfortran libblas-dev liblapack-dev openmpi-bin openmpi-common openssh-client
    openssh-server libopenmpi1.10 libopenmpi-dev libsuitesparse-dev
  - cmake --version
  - gcc --version

# Install python package dependencies
install:
  - pip install -e .[testing]

# Default `test' stage script
script:
  - cd test/test_packages
  - nosetests $NOSEOPTS $NOSETESTS

# Cache pip packages
cache:
  pip: true
  timeout: 1000

stages:
  - name: lint
    if: NOT branch IN (master, beta)
  - name: lint-comprehensive
    if: branch IN (master, beta)
  - test
  # Run tests on python 2.7 & 3.5, but only on master/beta
  - name: test-extra
    # if: branch IN (master, beta)
    if: branch IN (beta) # REMOVEME
  # - name: deploy # only run deployment for master & develop branches
  #   if: branch IN (master, develop)

jobs:
  include:
    - &lint-job
      stage: lint
      name: "PEP8"
      python: 3.7
      before_install: skip
      install:
        - pip install flake8
      script:
        - python -m flake8 --statistics $LINTOPTS packages/pygsti
    - <<: *lint-job
      name: "Critical errors"
      env: LINTOPTS="--config=.flake8-critical"
    - <<: *lint-job
      stage: lint-comprehensive
      name: "Comprehensive linting"

    # Can't use matrix expansion for included jobs or custom stages, so we'll manually list extra jobs
    - stage: test-extra
      python: 3.5
      env: NOSETESTS="drivers objects" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 3.5
      env: NOSETESTS="algorithms" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 3.5
      env: NOSETESTS="algorithmsb" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 3.5
      env: NOSETESTS="tools iotest optimize construction extras" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 3.5
      env: NOSETESTS="report" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 3.5
      env: NOSETESTS="reportb" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 3.5
      env: NOSETESTS="mpi" NOSEOPTS=$NOSEOPTS_ALL

    - stage: test-extra
      python: 2.7
      env: NOSETESTS="drivers objects" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 2.7
      env: NOSETESTS="algorithms" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 2.7
      env: NOSETESTS="algorithmsb" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 2.7
      env: NOSETESTS="tools iotest optimize construction extras" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 2.7
      env: NOSETESTS="report" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 2.7
      env: NOSETESTS="reportb" NOSEOPTS=$NOSEOPTS_ALL
    - stage: test-extra
      python: 2.7
      env: NOSETESTS="mpi" NOSEOPTS=$NOSEOPTS_ALL

    # - stage: deploy
    #   python: 3.7
    #   env: NOSETESTS=none NOSEOPTS=$NOSEOPTS_DEFAULT
    #   install: skip
    #   script: python CI/deploy

  allow_failures:
    - stage: lint
      name: "PEP8"

deploy:
  provider: pypi
  user: pygsti-ci
  password:
    secure: X/cWKsUlSWlQOGllx8VdJn2r2MEO7p7fi7HfVY089lFUP3gAlEN0bDrTzUiJU5hMnpPlcADymJmRCkmeKOc0ibQHhVStcXgU7yh8ZRNFKsFrats7KY4LO+TannQeDsTnb0D3Sc6mYK/t2zwoN0FuEXXGywdmFYhmu1ZAf08Ota6nZQeN06Husx/TrecFLj8537MBCh14qpGYIAb1B5w1opx1/b9nQ24YcyHHHQDp8qGhjuZ8+BnQuMOczUpoCBTUlGOeuVVnFkaMDRR2FEvtXOAAB37qZ9xYYeRhR1K3TFlYJuZDT/05l7NcJCzp1fSRq9RUwMqNgn1XNymW6HUdNdlFK4OJHKWeB6sGj4lg6MGv9WDx5+doo9jv+/DG5Q4tVmXhuyqUPyw74D4rl62SKl+Z1Nfqs0WtrDK6+LmgKKMI7kPpMrjEeF55vx2US8Wai/hGpWml5m5s4jP3RnHU/BWMVxpBBx6PygiNIp6fjDjYt4RO4nPuUQWg9r4c8+nJaSgTsVGDG2ApmmREJlo3WxGdedLfJ/PMtBN85S14BQUisF3f9r4jdyOuvvKeJAPOtz7bjvVxLOL7dnifDgGZGGjaJcBCmavzOTeH4is54iOubTpQnpMxRer3tvdgMT0++BNpOqItBug1PDG+57BK+ADTOFS+C8T1UheX6kJwWwk=
  server: https://test.pypi.org/legacy/
  distributions: "sdist bdist_wheel"
  skip_existing: true
  on:
    branch: master
    tags: true

notifications:
  email:
    on_success: change
    on_failure: always
